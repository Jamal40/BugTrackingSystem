@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject BugTrackerDbContext db

@{
    bool xx = SignInManager.IsSignedIn(User);
}

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        var CurrentUser = db.BugTrackerUsers.FirstOrDefault(user => user.BugTrackerUserID == User.Claims.FirstOrDefault(c => c.Type == "nameidentifier").Value);

        <li class="nav-item">
            <h1>Hello @CurrentUser.Name</h1>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!@CurrentUser.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
